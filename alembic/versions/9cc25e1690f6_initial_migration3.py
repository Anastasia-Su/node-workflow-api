"""'initial_migration3'

Revision ID: 9cc25e1690f6
Revises: dc2a83c1e6c9
Create Date: 2024-05-15 15:53:36.931550

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9cc25e1690f6'
down_revision: Union[str, None] = 'dc2a83c1e6c9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('nodes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('type', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('association',
    sa.Column('source_id', sa.Integer(), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['source_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['target_id'], ['nodes.id'], )
    )
    op.create_table('end',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('input_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['input_node_id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'OPENED', name='messagestatuses'), nullable=False),
    sa.Column('text', sa.String(length=511), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('start',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('output_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['output_node_id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('condition',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('condition', sa.String(), nullable=False),
    sa.Column('yes_node_id', sa.Integer(), nullable=True),
    sa.Column('no_node_id', sa.Integer(), nullable=True),
    sa.Column('previous_message_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['no_node_id'], ['nodes.id'], ),
    sa.ForeignKeyConstraint(['previous_message_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['yes_node_id'], ['nodes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('condition')
    op.drop_table('start')
    op.drop_table('message')
    op.drop_table('end')
    op.drop_table('association')
    op.drop_table('nodes')
    # ### end Alembic commands ###
