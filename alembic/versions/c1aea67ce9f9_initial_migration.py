"""'initial_migration'

Revision ID: c1aea67ce9f9
Revises: 
Create Date: 2024-05-17 10:39:12.994207

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c1aea67ce9f9'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('node',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'SENT', 'OPENED', name='messagestatuses'), nullable=False),
    sa.Column('text', sa.String(length=511), nullable=False),
    sa.Column('parent_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_node_id'], ['node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('condition',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('condition', sa.String(), nullable=False),
    sa.Column('message_node_id', sa.Integer(), nullable=True),
    sa.Column('parent_node_id', sa.Integer(), nullable=True),
    sa.Column('parent_message_node_id', sa.Integer(), nullable=True),
    sa.Column('edge', sa.Enum('YES', 'NO', name='conditionedges'), nullable=True),
    sa.ForeignKeyConstraint(['message_node_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['parent_message_node_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['parent_node_id'], ['node.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('end',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message', sa.String(length=255), nullable=True),
    sa.Column('parent_message_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_message_node_id'], ['message.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('start',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('message', sa.String(length=255), nullable=True),
    sa.Column('message_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['message_node_id'], ['message.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('workflow_nodes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_node_id', sa.Integer(), nullable=True),
    sa.Column('message_node_ids', sa.String(), nullable=True),
    sa.Column('condition_node_ids', sa.String(), nullable=True),
    sa.Column('end_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['end_node_id'], ['end.id'], ),
    sa.ForeignKeyConstraint(['start_node_id'], ['start.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workflow_nodes_id'), 'workflow_nodes', ['id'], unique=False)
    op.create_table('workflow_condition_association',
    sa.Column('workflow_node_id', sa.Integer(), nullable=True),
    sa.Column('condition_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['condition_node_id'], ['condition.id'], ),
    sa.ForeignKeyConstraint(['workflow_node_id'], ['workflow_nodes.id'], )
    )
    op.create_table('workflow_message_association',
    sa.Column('workflow_node_id', sa.Integer(), nullable=True),
    sa.Column('message_node_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['message_node_id'], ['message.id'], ),
    sa.ForeignKeyConstraint(['workflow_node_id'], ['workflow_nodes.id'], )
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workflow_message_association')
    op.drop_table('workflow_condition_association')
    op.drop_index(op.f('ix_workflow_nodes_id'), table_name='workflow_nodes')
    op.drop_table('workflow_nodes')
    op.drop_table('start')
    op.drop_table('end')
    op.drop_table('condition')
    op.drop_table('message')
    op.drop_table('node')
    # ### end Alembic commands ###
